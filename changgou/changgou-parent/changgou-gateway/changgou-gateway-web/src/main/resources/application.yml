spring:
  cloud:
    gateway:
      globalcors: # 全局声明配置
        cors-configurations:
          '[/**]': # 匹配所有请求
            allowedOrigins: "*" #跨域处理 允许所有的域
            allowedMethods: # 支持的方法
              - GET
              - POST
              - PUT
              - DELETE
      routes:
            #唯一标识符号
            - id: changgou_goods_route
              #uri: http://localhost:18081 #用户请求需要路由到该微服务[指定路由的服务]
              #lb:使用LoadBalancerClient实现负载均衡，后面的goods是微服务名称[主要应用于集群环境]
              uri: lb://goods
              predicates: #路由断言，路由规则配置
              #  - Host=cloud.itcjy.com** #用户请求的域名规则配置，所有以itcjy.com**的请求都会路由到上面的微服务uri：http://localhost:18081
              #所有以/brand开始的请求，都路由http://localhost:18081微服务
                #- Path=/brand/**
                #- Path=/api/brand/**
                #- Path=/api/**
                - Path=/api/goods/**,/api/brand/**,/api/cache/**,/api/categoryBrand/**,/api/category/**,/api/para/**,/api/pref/**,/api/sku/**,/api/spec/**,/api/spu/**,/api/stockBack/**,/api/template/**
              #所有以/api/brand的请求，都被路由http://localhost:18081微服务
              #希望该路径用微服务网关自动添加上/aoi前缀，每次请求真实微服务网关的时候需要将/api去掉
              filters: #过滤
              - StripPrefix=1 #将请求路径中的第一个路径去掉，请求路径以/区分，一个/代表一个路径
                #- PrefixPath=/brand
              - name: RequestRateLimiter #请求数限流 名字不能随便写 ，使用默认的facatory
                args:
                  #用户唯一识别标识符，ipKeyResolver与bean的名字对应
                  key-resolver: "#{@ipKeyResolver}"
                  #每秒钟允许一个请求
                  redis-rate-limiter.replenishRate: 1
                  #宽限个数，允许并发的数量
                  redis-rate-limiter.burstCapacity: 2

       #用户微服务
            - id: changgou_user_route
              uri: lb://user
              predicates:
                - Path=/api/user/**,/api/address/**,/api/areas/**,/api/cities/**,/api/provinces/**
              filters:
              - StripPrefix=1
  application:
    name: gateway-web
    #Redis配置
  redis:
    host: 192.168.123.132
    port: 6379
server:
  port: 8001
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka
  instance:
    prefer-ip-address: true
management:
  endpoint:
    gateway:
      enabled: true
    web:
      exposure:
        include: true

